@subheading gsasl_step
@anchor{gsasl_step}
@deftypefun {int} {gsasl_step} (Gsasl_session * @var{sctx}, const char * @var{input}, size_t @var{input_len}, char ** @var{output}, size_t * @var{output_len})
@var{sctx}: libgsasl session handle.

@var{input}: input byte array.

@var{input_len}: size of input byte array.

@var{output}: newly allocated output byte array.

@var{output_len}: pointer to output variable with size of output byte array.

Perform one step of SASL authentication.  This reads data from the
other end (from @code{input} and @code{input_len}), processes it (potentially
invoking callbacks to the application), and writes data to server
(into newly allocated variable @code{output} and @code{output_len} that
indicate the length of @code{output}).

The contents of the @code{output} buffer is unspecified if this functions
returns anything other than @code{GSASL_OK} or @code{GSASL_NEEDS_MORE}.  If
this function return @code{GSASL_OK} or @code{GSASL_NEEDS_MORE}, however, the
@code{output} buffer is allocated by this function, and it is the
responsibility of caller to deallocate it by calling free
(@code{output}).

@strong{Return value:} Returns @code{GSASL_OK} if authenticated terminated
successfully, @code{GSASL_NEEDS_MORE} if more data is needed, or error
code.
@end deftypefun

