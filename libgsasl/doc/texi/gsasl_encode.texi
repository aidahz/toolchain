@subheading gsasl_encode
@anchor{gsasl_encode}
@deftypefun {int} {gsasl_encode} (Gsasl_session * @var{sctx}, const char * @var{input}, size_t @var{input_len}, char ** @var{output}, size_t * @var{output_len})
@var{sctx}: libgsasl session handle.

@var{input}: input byte array.

@var{input_len}: size of input byte array.

@var{output}: newly allocated output byte array.

@var{output_len}: size of output byte array.

Encode data according to negotiated SASL mechanism.  This might mean
that data is integrity or privacy protected.

The @code{output} buffer is allocated by this function, and it is the
responsibility of caller to deallocate it by calling free(@code{output}).

@strong{Return value:} Returns @code{GSASL_OK} if encoding was successful,
otherwise an error code.
@end deftypefun

